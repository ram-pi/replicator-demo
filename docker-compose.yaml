version: '3.8'
services:
    # ZOOKEEPER DC-1
    zookeeper-dc1:
      container_name: "zookeeper-dc1"
      image: confluentinc/cp-zookeeper:${CF_TAG}
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ports:
        - 2181:2181
      cap_add:
        - NET_ADMIN
    # KAFKA DC-1 
    kafka-dc1:
      container_name: "kafka-dc1"
      image: confluentinc/cp-server:${CF_TAG}
      hostname: kafka-dc1
      depends_on:
        - zookeeper-dc1
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper-dc1:2181"
        KAFKA_LISTENERS: "INTERNAL://:9092, EXTERNAL://:19092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-dc1:9092, EXTERNAL://localhost:19092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        KAFKA_BROKER_ID: "1"
        KAFKA_DELETE_TOPIC_ENABLE: "true"
      ports:
        - 19092:19092
      cap_add:
        - NET_ADMIN
    # CONNECT DC-1
    connect-dc1:
      image: confluentinc/cp-kafka-connect:${CF_TAG}
      hostname: connect-dc1
      container_name: connect-dc1
      # volumes:
      #   - ./connect-components:/usr/share/confluent-hub-components
      depends_on:
        - kafka-dc1
      ports:
        - "8083:8083"
        - "1091:1091"
      environment:
        CONNECT_BOOTSTRAP_SERVERS: 'kafka-dc1:9092'
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_CONFIG_STORAGE_TOPIC: connect-configs-dc1
        CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets-dc1
        CONNECT_STATUS_STORAGE_TOPIC: connect-status-dc1
        CONNECT_REST_ADVERTISED_HOST_NAME: connect-dc1
        # CONNECT_REST_ADVERTISED_PORT: 8083
        CONNECT_GROUP_ID: connect-group-dc1
        CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
        CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        #CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
        CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR,org.apache.kafka.connect=DEBUG
        # JMX METRICS
        KAFKA_JMX_HOSTNAME: localhost
        KAFKA_JMX_PORT: 1091 
      command: 
        - bash
        - -c
        - |
          echo "Installing Connector"
          confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.5.3 
          confluent-hub install --no-prompt confluentinc/kafka-connect-replicator:7.2.1
          #
          echo "Launching Kafka Connect worker"
          /etc/confluent/docker/run &
          #
          sleep infinity
    # ZOOKEEPER DC-2
    zookeeper-dc2:
      container_name: "zookeeper-dc2"
      image: confluentinc/cp-zookeeper:${CF_TAG}
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ports:
        - 2182:2181
      cap_add:
        - NET_ADMIN
    # KAFKA DC-1 
    kafka-dc2:
      container_name: "kafka-dc2"
      image: confluentinc/cp-server:${CF_TAG}
      hostname: kafka-dc2
      depends_on:
        - zookeeper-dc2
      environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper-dc2:2181"
        KAFKA_LISTENERS: "INTERNAL://:9092, EXTERNAL://:29092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-dc2:9092, EXTERNAL://localhost:29092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        KAFKA_BROKER_ID: "1"
        KAFKA_DELETE_TOPIC_ENABLE: "true"
      ports:
        - 29092:29092
      cap_add:
        - NET_ADMIN
    # CONNECT DC-2
    connect-dc2:
      #image: confluentinc/cp-kafka-connect:${CF_TAG}
      image: confluentinc/cp-enterprise-replicator:${CF_TAG}
      hostname: connect-dc2
      container_name: connect-dc2
      # volumes:
      #   - ./connect-components:/usr/share/confluent-hub-components
      depends_on:
        - kafka-dc2
      ports:
        - "28083:28083"
        - "2091:2091"
      environment:
        CONNECT_BOOTSTRAP_SERVERS: 'kafka-dc2:9092'
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_CONFIG_STORAGE_TOPIC: connect-configs-dc2
        CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets-dc2
        CONNECT_STATUS_STORAGE_TOPIC: connect-status-dc2
        CONNECT_REST_ADVERTISED_HOST_NAME: connect-dc2
        CONNECT_REST_PORT: 28083
        CONNECT_REST_ADVERTISED_PORT: 28083
        CONNECT_LISTENERS: http://connect-dc2:28083,http://localhost:28083
        CONNECT_GROUP_ID: connect-group-dc2
        CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
        CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        #CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
        CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
        CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR,org.apache.kafka.connect=DEBUG
        # Monitoring
        # Confluent Monitoring Interceptors for Control Center Streams Monitoring
        CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-dc2:29092
        CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-dc2:29092
        CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.replicator.monitoring.ReplicatorMonitoringExtension
        # JMX METRICS
        KAFKA_JMX_HOSTNAME: localhost
        KAFKA_JMX_PORT: 2091 
      command: "bash -c 'cp /usr/share/java/kafka-connect-replicator/replicator-rest-extension-*.jar /etc/kafka-connect/jars/; /etc/confluent/docker/run'"
      # command: 
      #   - bash
      #   - -c
      #   - |
      #     echo "Installing Connector"
      #     confluent-hub install --no-prompt confluentinc/kafka-connect-replicator:7.2.1
      #     #
      #     echo "Launching Kafka Connect worker"
      #     /etc/confluent/docker/run &
      #     #
      #     sleep infinity
    # CONFLUENT - C3
    control-center:
      image: confluentinc/cp-enterprise-control-center:${CF_TAG}
      hostname: control-center
      container_name: control-center
      depends_on:
        - kafka-dc1
        - kafka-dc2
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-dc1:9092'
        CONTROL_CENTER_CONNECT_DC1_CLUSTER: http://connect-dc1:8083
        CONTROL_CENTER_CONNECT_DC2_CLUSTER: http://connect-dc2:28083
        # Change healthcheck endpoint for CE 
        CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: "/connectors"
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        CONTROL_CENTER_KAFKA_DC1_BOOTSTRAP_SERVERS: 'kafka-dc1:9092'
        CONTROL_CENTER_KAFKA_DC2_BOOTSTRAP_SERVERS: 'kafka-dc2:9092'
        CONTROL_CENTER_DEPRECATED_VIEWS_ENABLE: "true"
        PORT: 9021
    # SCHEMA REGISTRY
    schema-registry:
      image: confluentinc/cp-schema-registry:${CF_TAG}
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - kafka-dc1
      restart: always
      ports:
        - "8081:8081"
        - "2099:2099"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-dc1:9092'
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        SCHEMA_REGISTRY_JMX_HOSTNAME: localhost
        SCHEMA_REGISTRY_JMX_PORT: 2099
    # KSQL
    ksqldb-server:
      image: confluentinc/cp-ksqldb-server:${CF_TAG}
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - kafka-dc1
        - schema-registry
      ports:
        - "8088:8088"
        - "1099:1099"
      environment:
        KSQL_CONFIG_DIR: "/etc/ksql"
        KSQL_BOOTSTRAP_SERVERS: "kafka-dc1:9092"
        KSQL_HOST_NAME: ksqldb-server
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_CACHE_MAX_BYTES_BUFFERING: 0
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        KSQL_KSQL_CONNECT_URL: "http://connect:8083"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
        # DEBUGGING
        KSQL_KSQL_HEARTBEAT_ENABLE: 'true'
        KSQL_KSQL_LAG_REPORTING_ENABLE: 'true'
        # JMX METRICS
        KSQL_JMX_OPTS: >
          -Djava.rmi.server.hostname=localhost
          -Dcom.sun.management.jmxremote
          -Dcom.sun.management.jmxremote.port=1099
          -Dcom.sun.management.jmxremote.authenticate=false
          -Dcom.sun.management.jmxremote.ssl=false
          -Dcom.sun.management.jmxremote.rmi.port=1099